---
title: "prob4cp4"
author: "Matheus Freitas"
date: "23 de julho de 2018"
output: html_document
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
library(resample)
library(tidyverse)
library(here)
library(lubridate)
library(timeDate)

git = read.csv("data/github-users-committing-filetypes.csv.txt")

git <- git %>%
  na.omit()
```

O objetivo desse exercício é replicar o checkpoint anterior utilizando testes de hipotése para chegar aos valores, ao invés de bootstrapping. Logo, as únicas coisas que serão explicadas aqui serão os resultados obtidos. Para entender melhor os dados, veja os exercícios anteriores deste problema.

#O que é teste de hipótese? 

Teste de hipóteses é um procedimento que permite tomar uma decisão entre duas ou mais hipóteses ou hipótese alternativa, utilizando os dados observados de um determinado experimento.

Hipótese nula é a hipótese assumida como verdadeira para a construção do teste. É a teoria, o efeito ou a alternativa que se está interessado em testar.

Para comparar os resultados obtivos com intervalo de confiança e hipótese nula, vamos refazer duas análises anteriores e comparar o resultado do IC e da Hipótese Nula.


##O que é P-valor? 

P-valor é a probabilidade de se obter uma estatística de teste igual ou mais extrema que aquela observada em uma amostra, sob a hipótese nula. Por exemplo, em testes de hipótese, pode-se rejeitar a hipótese nula a 5% caso o valor-p seja menor que 5%. Assim, uma outra interpretação para o valor-p, é que este é menor nível de significância com que se rejeitaria a hipótese nula. Em termos gerais, um valor-p pequeno significa que a probabilidade de obter um valor da estatística de teste como o observado é muito improvável, levando assim à rejeição da hipótese nula. [(Fonte)](https://pt.wikipedia.org/wiki/Valor-p)



```{r}
git <- git %>%
  filter(file_extension == "py" | file_extension == "js") %>%
  mutate(date = ymd(paste(the_year,
                          the_month,
                          month_day)),
         is_weekend = isWeekend(date)) %>%
  select(-the_year,
         -the_month,
         -month_day)
```


##Qual é mais usada durante a semana, Python ou JavaScript? 

```{r}
group1 = "py"
group2 = "js"

para_comparar = git %>% 
    filter(file_extension %in% c(group1, group2)) 

# A diferença na amostra, que queremos comparar com o modelo nulo
d = para_comparar %>% 
    group_by(file_extension) %>% 
    summarise(ct = sum(users) / n())
m1 = d %>% filter(file_extension == group1) %>% pull(ct)
m2 = d %>% filter(file_extension == group2) %>% pull(ct)

diferenca_amostral = m1 - m2

permutacoes = replicate(10000, 
          {
              d = para_comparar %>% 
                  mutate(version_shuffled = sample(file_extension, n())) %>% 
                  group_by(version_shuffled) %>% 
                  summarise(ct = sum(users) / n())
              m1 = d %>% filter(version_shuffled == group1) %>% pull(ct)
              m2 = d %>% filter(version_shuffled == group2) %>% pull(ct)
              m1 - m2
          })

tibble(diferenca = permutacoes) %>% 
  ggplot(aes(x = diferenca)) + 
  geom_histogram(bins = 30) + 
  geom_vline(xintercept = diferenca_amostral, size = 2, color = "orange")

prop = function(x){
    sum(x)/NROW(x)
}

git %>% 
    permutationTest2(statistic = prop(users), 
                     treatment = file_extension)

```

