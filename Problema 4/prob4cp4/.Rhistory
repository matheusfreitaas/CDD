knitr::opts_chunk$set(echo = TRUE)
library(resample)
library(tidyverse)
library(here)
library(lubridate)
library(timeDate)
git = read.csv("data/github-users-committing-filetypes.csv.txt")
git <- git %>%
na.omit()
git = git %>%
filter(file_extension == "js" | file_extension == "py")
git <- git %>%
mutate(date = ymd(paste(the_year,
the_month,
month_day)),
is_weekend = isWeekend(date)) %>%
select(-the_year,
-the_month,
-month_day)
View(git)
knitr::opts_chunk$set(echo = TRUE, warning = FALSE)
library(tidyverse)
library(boot)
theme_set(theme_bw())
sessions = read_csv(here::here("dados/library-website.csv"),
col_types = "cil")
glimpse(sessions)
sessions %>%
ggplot() +
aes(x = reorder(version, click_on_target, NROW), fill = click_on_target) +
geom_bar() +
labs(
x = "Versão do site",
y = "Sessões",
fill = "Clique no alvo"
)
sessions %>%
ggplot() +
aes(x = reorder(version, click_on_target, NROW), fill = click_on_target) +
geom_bar(position = "fill") +
labs(
x = "Versão do site",
y = "Proporção das sessões",
fill = "Clique no alvo"
)
sessions %>%
group_by(version) %>%
summarise(`Clickthrough rate` = sum(click_on_target) / n()) %>%
ggplot() +
aes(x = reorder(version, -`Clickthrough rate`),
y = `Clickthrough rate`) +
geom_point(size = 5, colour = "IndianRed") +
labs(x = "")
set.seed(123)
calcula_ic = function(data){
bootstrap = boot(data,
statistic = function(x, i){sum(x[i])/NROW(x)},
R = 2000)
ci = boot.ci(bootstrap,
conf = 0.95,
type = "basic")
ci
}
ics = sessions %>%
select(-session) %>%
nest(click_on_target) %>%
mutate(
media_amostral = map_dbl(data, ~ sum(.x$click_on_target / NROW(.x))),
ic = map(data, ~ calcula_ic(.x$click_on_target))) %>%
mutate(lower = map_dbl(ic, ~ .x$basic[[4]]),
upper = map_dbl(ic, ~ .x$basic[[5]]))
head(ics)
ics %>%
ggplot() +
aes(x = reorder(version, -upper), y = media_amostral, ymin = lower, ymax = upper) +
geom_errorbar(width = .1) +
geom_point(size = 3, colour = "IndianRed") +
labs(
x = "Versão do site",
y = "Click through rate"
)
set.seed(123)
ic_diff = function(data, group1, group2){
difference = function(data, i, group1, group2){
d = data %>%
slice(i) %>%
group_by(version) %>%
summarise(ct = sum(click_on_target) / n())
m1 = d %>% filter(version == group1) %>% pull(ct)
m2 = d %>% filter(version == group2) %>% pull(ct)
m1 - m2
}
bootstrap = boot(data,
statistic = difference,
R = 1000,
group1 = group1,
group2 = group2)
ci = boot.ci(bootstrap,
conf = 0.95,
type = "basic")
ci
}
comparacoes =
frame_data(
~comparacao, ~ic,
"Interact - Connect", ic_diff(sessions, "Interact", "Connect"),
"Interact - Services", ic_diff(sessions, "Interact", "Services"),
"Interact - Learn", ic_diff(sessions, "Interact", "Learn"),
"Services - Learn", ic_diff(sessions, "Services", "Learn"),
"Services - Connect", ic_diff(sessions, "Services", "Connect"),
) %>%
mutate(lower = map_dbl(ic, ~ .x$basic[[4]]),
upper = map_dbl(ic, ~ .x$basic[[5]]))
comparacoes %>%
ggplot() +
aes(x = comparacao, ymin = lower, ymax = upper) +
geom_hline(yintercept = 0, colour = "red") +
geom_errorbar(width = .1, size = 1.1) +
labs(
x = "Comparação",
y = "Opção 1 - Opção 2"
)
group1 = "Interact"
group2 = "Connect"
para_comparar = sessions %>%
filter(version %in% c(group1, group2))
# A diferença na amostra, que queremos comparar com o modelo nulo
d = para_comparar %>%
group_by(version) %>%
summarise(ct = sum(click_on_target) / n())
m1 = d %>% filter(version == group1) %>% pull(ct)
m2 = d %>% filter(version == group2) %>% pull(ct)
diferenca_amostral = m1 - m2
# Permutações para calcular o que acontece no modelo nulo
permutacoes = replicate(10000,
{
d = para_comparar %>%
mutate(version_shuffled = sample(version, n())) %>%
group_by(version_shuffled) %>%
summarise(ct = sum(click_on_target) / n())
m1 = d %>% filter(version_shuffled == group1) %>% pull(ct)
m2 = d %>% filter(version_shuffled == group2) %>% pull(ct)
m1 - m2
})
tibble(diferenca = permutacoes) %>%
ggplot(aes(x = diferenca)) +
geom_histogram(bins = 30) +
geom_vline(xintercept = diferenca_amostral, size = 2, color = "orange")
sum(abs(permutacoes) >= abs(diferenca_amostral)) / length(permutacoes)
library(coin)
View(sessions)
knitr::opts_chunk$set(echo = TRUE)
library(resample)
library(tidyverse)
library(here)
library(lubridate)
library(timeDate)
git = read.csv("data/github-users-committing-filetypes.csv.txt")
git <- git %>%
na.omit()
git <- git %>%
mutate(date = ymd(paste(the_year,
the_month,
month_day)),
is_weekend = isWeekend(date)) %>%
select(-the_year,
-the_month,
-month_day)
View(git)
group1 = "py"
group2 = "js"
para_comparar = git %>%
filter(file_extension %in% c(group1, group2))
View(para_comparar)
# A diferença na amostra, que queremos comparar com o modelo nulo
d = para_comparar %>%
group_by(file_extension) %>%
summarise(ct = sum(users) / n())
m1 = d %>% filter(version == group1) %>% pull(ct)
# A diferença na amostra, que queremos comparar com o modelo nulo
d = para_comparar %>%
group_by(file_extension) %>%
summarise(ct = sum(users) / n())
m1 = d %>% filter(file_extension == group1) %>% pull(ct)
m2 = d %>% filter(file_extension == group2) %>% pull(ct)
diferenca_amostral = m1 - m2
permutacoes = replicate(10000,
{
d = para_comparar %>%
mutate(version_shuffled = sample(file_extension, n())) %>%
group_by(version_shuffled) %>%
summarise(ct = sum(users) / n())
m1 = d %>% filter(version_shuffled == group1) %>% pull(ct)
m2 = d %>% filter(version_shuffled == group2) %>% pull(ct)
m1 - m2
})
permutacoes = replicate(10000,
{
d = para_comparar %>%
mutate(version_shuffled = sample(file_extension, n())) %>%
group_by(version_shuffled) %>%
summarise(ct = sum(users) / n())
m1 = d %>% filter(version_shuffled == group1) %>% pull(ct)
m2 = d %>% filter(version_shuffled == group2) %>% pull(ct)
m1 - m2
})
tibble(diferenca = permutacoes) %>%
ggplot(aes(x = diferenca)) +
geom_histogram(bins = 30) +
geom_vline(xintercept = diferenca_amostral, size = 2, color = "orange")
sum(abs(permutacoes) >= abs(diferenca_amostral)) / length(permutacoes)
prop = function(x){
sum(x)/NROW(x)
}
git %>%
permutationTest2(statistic = prop(users),
treatment = file_extension)
tibble(diferenca = permutacoes) %>%
ggplot(aes(x = diferenca)) +
geom_histogram(bins = 30) +
geom_vline(xintercept = diferenca_amostral, size = 2, color = "orange")
prop = function(x){
sum(x)/NROW(x)
}
git %>%
permutationTest2(statistic = prop(users),
treatment = file_extension)
git %>%
filter(file_extension %in% c(group1, group2))
git %>%
resample::permutationTest2(statistic = prop(users),
treatment = file_extension)
git %>%
filter(file_extension %in% c(group1, group2)) %>%
resample::permutationTest2(statistic = prop(users),
treatment = file_extension)
View(sessions)
git %>%
filter(file_extension %in% c("js", "py")) %>%
permutationTest2(statistic = prop(users),
treatment = file_extension)
prop = function(x){
sum(x)/NROW(x)
}
git %>%
filter(file_extension %in% c("js", "py")) %>%
permutationTest2(statistic = prop(users),
treatment = file_extension)
group1 = "py"
group2 = "js"
para_comparar = git %>%
filter(file_extension %in% c(group1, group2))
# A diferença na amostra, que queremos comparar com o modelo nulo
d = para_comparar %>%
group_by(file_extension) %>%
summarise(ct = sum(users) / n())
m1 = d %>% filter(file_extension == group1) %>% pull(ct)
m2 = d %>% filter(file_extension == group2) %>% pull(ct)
diferenca_amostral = m1 - m2
permutacoes = replicate(10000,
{
d = para_comparar %>%
mutate(version_shuffled = sample(file_extension, n())) %>%
group_by(version_shuffled) %>%
summarise(ct = sum(users) / n())
m1 = d %>% filter(version_shuffled == group1) %>% pull(ct)
m2 = d %>% filter(version_shuffled == group2) %>% pull(ct)
m1 - m2
})
tibble(diferenca = permutacoes) %>%
ggplot(aes(x = diferenca)) +
geom_histogram(bins = 30) +
geom_vline(xintercept = diferenca_amostral, size = 2, color = "orange")
prop = function(x){
sum(x)/NROW(x)
}
git %>%
filter(file_extension %in% c("js", "py")) %>%
permutationTest2(statistic = prop(users),
treatment = file_extension)
git <- git %>%
filter(file_extension == "py" | file_extension == "js")
mutate(date = ymd(paste(the_year,
the_month,
month_day)),
is_weekend = isWeekend(date)) %>%
select(-the_year,
-the_month,
-month_day)
knitr::opts_chunk$set(echo = TRUE)
library(resample)
library(tidyverse)
library(here)
library(lubridate)
library(timeDate)
git = read.csv("data/github-users-committing-filetypes.csv.txt")
git <- git %>%
na.omit()
git <- git %>%
filter(file_extension == "py" | file_extension == "js")
mutate(date = ymd(paste(the_year,
the_month,
month_day)),
is_weekend = isWeekend(date)) %>%
select(-the_year,
-the_month,
-month_day)
knitr::opts_chunk$set(echo = TRUE)
library(resample)
library(tidyverse)
library(here)
library(lubridate)
library(timeDate)
git = read.csv("data/github-users-committing-filetypes.csv.txt")
git <- git %>%
na.omit()
git <- git %>%
filter(file_extension == "py" | file_extension == "js")
mutate(date = ymd(paste(the_year,
the_month,
month_day)),
is_weekend = isWeekend(date)) %>%
select(-the_year,
-the_month,
-month_day)
git <- git %>%
filter(file_extension == "py" | file_extension == "js") %>%
mutate(date = ymd(paste(the_year,
the_month,
month_day)),
is_weekend = isWeekend(date)) %>%
select(-the_year,
-the_month,
-month_day)
group1 = "py"
group2 = "js"
para_comparar = git %>%
filter(file_extension %in% c(group1, group2))
# A diferença na amostra, que queremos comparar com o modelo nulo
d = para_comparar %>%
group_by(file_extension) %>%
summarise(ct = sum(users) / n())
m1 = d %>% filter(file_extension == group1) %>% pull(ct)
m2 = d %>% filter(file_extension == group2) %>% pull(ct)
diferenca_amostral = m1 - m2
permutacoes = replicate(10000,
{
d = para_comparar %>%
mutate(version_shuffled = sample(file_extension, n())) %>%
group_by(version_shuffled) %>%
summarise(ct = sum(users) / n())
m1 = d %>% filter(version_shuffled == group1) %>% pull(ct)
m2 = d %>% filter(version_shuffled == group2) %>% pull(ct)
m1 - m2
})
group1 = "py"
group2 = "js"
para_comparar = git %>%
filter(file_extension %in% c(group1, group2))
# A diferença na amostra, que queremos comparar com o modelo nulo
d = para_comparar %>%
group_by(file_extension) %>%
summarise(ct = sum(users) / n())
m1 = d %>% filter(file_extension == group1) %>% pull(ct)
m2 = d %>% filter(file_extension == group2) %>% pull(ct)
diferenca_amostral = m1 - m2
permutacoes = replicate(10000,
{
d = para_comparar %>%
mutate(version_shuffled = sample(file_extension, n())) %>%
group_by(version_shuffled) %>%
summarise(ct = sum(users) / n())
m1 = d %>% filter(version_shuffled == group1) %>% pull(ct)
m2 = d %>% filter(version_shuffled == group2) %>% pull(ct)
m1 - m2
})
View(git)
tibble(diferenca = permutacoes) %>%
ggplot(aes(x = diferenca)) +
geom_histogram(bins = 30) +
geom_vline(xintercept = diferenca_amostral, size = 2, color = "orange")
prop = function(x){
sum(x)/NROW(x)
}
git %>%
permutationTest2(statistic = prop(users),
treatment = file_extension)
View(git)
knitr::opts_chunk$set(echo = TRUE)
library(resample)
library(tidyverse)
library(here)
library(lubridate)
library(timeDate)
git = read.csv("data/github-users-committing-filetypes.csv.txt")
git <- git %>%
na.omit()
git <- git %>%
filter(file_extension == "py" | file_extension == "js") %>%
mutate(date = ymd(paste(the_year,
the_month,
month_day)),
is_weekend = isWeekend(date)) %>%
select(-the_year,
-the_month,
-month_day)
group1 = "py"
group2 = "js"
para_comparar = git %>%
filter(file_extension %in% c(group1, group2))
# A diferença na amostra, que queremos comparar com o modelo nulo
d = para_comparar %>%
group_by(file_extension) %>%
summarise(ct = sum(users) / n())
m1 = d %>% filter(file_extension == group1) %>% pull(ct)
m2 = d %>% filter(file_extension == group2) %>% pull(ct)
diferenca_amostral = m1 - m2
permutacoes = replicate(10000,
{
d = para_comparar %>%
mutate(version_shuffled = sample(file_extension, n())) %>%
group_by(version_shuffled) %>%
summarise(ct = sum(users) / n())
m1 = d %>% filter(version_shuffled == group1) %>% pull(ct)
m2 = d %>% filter(version_shuffled == group2) %>% pull(ct)
m1 - m2
})
tibble(diferenca = permutacoes) %>%
ggplot(aes(x = diferenca)) +
geom_histogram(bins = 30) +
geom_vline(xintercept = diferenca_amostral, size = 2, color = "orange")
prop = function(x){
sum(x)/NROW(x)
}
git %>%
permutationTest2(statistic = prop(users),
treatment = file_extension)
