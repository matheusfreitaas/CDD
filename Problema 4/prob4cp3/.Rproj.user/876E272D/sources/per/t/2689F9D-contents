---
title: "prob4cp3"
author: "Matheus Freitas"
date: "21 de julho de 2018"
output: html_document
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
library(resample)
library(tidyverse)
library(here)
library(lubridate)
library(timeDate)

git = read.csv("data/github-users-committing-filetypes.csv.txt")

git <- git %>%
  na.omit()
```
Nesta analise, utilizaremos dados do GitHub do ano de 2016 e 2017, os mesmos da análise anterior.
Faremos algumas outras observações sobre os mesmos dados, levando em consideração a análise descritiva dos dados já realizada anteriormente nos exercícios anteriores.

##Qual é mais usada durante a semana, Python ou JavaScript? 

```{r}
git = git %>%
  filter(file_extension == "js" | file_extension == "py")

git <- git %>%
  mutate(date = ymd(paste(the_year,
                          the_month,
                          month_day)),
         is_weekend = isWeekend(date)) %>%
  select(-the_year,
         -the_month,
         -month_day)

```

Assim como no exercício anterior também faremos um bootstrapping.

```{r}
medianJS_week = git %>%
  filter(file_extension == "js") %>%
  filter(!is_weekend) %>%
  bootstrap(median(users),
            R = 2000) %>%
  CI.percentile(probs = c(.025, .975))
  
medianPY_week = git %>%
  filter(file_extension == "py") %>%
  filter(!is_weekend) %>%
  bootstrap(median(users),
            R = 2000) %>%
  CI.percentile(probs = c(.025, .975))

data = data.frame(rbind(medianJS_week,
                        medianPY_week))
data$linguagem = c("js","py")
data$is_weekend = c(FALSE, FALSE)

ggplot(data = data,
       mapping = aes(x = linguagem, 
                     ymin = X2.5.,
                     ymax = X97.5.,
                     colour = linguagem)) +
  geom_errorbar(width = .2) +
  labs(title = "Inferência",
       x = "Linguagem",
       y = "Intervalo da mediana com 95% de confiança",
       colour = "Linguagem")
```

Como podemos ver, os intervalos não se sobrepoem, logo podemos afimar que JavaScript é mais popular durante a semana. 


Com isso, surge a seguinte pergunta:


##Existe algum dia da semana que tem maior contribuição de usuários? 

```{r}
git<- git %>%
  mutate(weekday = wday(date, label = TRUE))

median_day_1 = git %>%
  filter(year(date) == "2016") %>%
  filter(weekday == "seg") %>%
  bootstrap(median(users),
            R = 2000) %>%
  CI.percentile(probs = c(.025, .975))

median_day_2 = git %>%
  filter(year(date) == "2016") %>%
  filter(weekday == "ter") %>%
  bootstrap(median(users),
            R = 2000) %>%
  CI.percentile(probs = c(.025, .975))


median_day_3 = git %>%
  filter(year(date) == "2016") %>%
  filter(weekday == "qua") %>%
  bootstrap(median(users),
            R = 2000) %>%
  CI.percentile(probs = c(.025, .975))


median_day_4 = git %>%
  filter(year(date) == "2016") %>%
  filter(weekday == "qui") %>%
  bootstrap(median(users),
            R = 2000) %>%
  CI.percentile(probs = c(.025, .975))

median_day_5 = git %>%
  filter(year(date) == "2016") %>%
  filter(weekday == "sex") %>%
  bootstrap(median(users),
            R = 2000) %>%
  CI.percentile(probs = c(.025, .975))

data3 = data.frame(rbind(median_day_1,
                         median_day_2,
                         median_day_3,
                         median_day_4,
                         median_day_5))
data3$weekday = c("seg", "ter", "qua", "qui", "sex")

ggplot(data = data3,
       mapping = aes(x = weekday, 
                     ymin = X2.5.,
                     ymax = X97.5.,
                     colour = weekday)) +
  geom_errorbar(width = .2) +
  labs(title = "Inferência",
       x = "Dia da Semana",
       y = "Intervalo da mediana com 95% de confiança",
       colour = "Dia da semana")

```

Não podemos afirmar que nenhum dos 5 dias da semana possuem mais ou menos contribuições pois todos os intervalos possuem interseções entre si.


##Qual trimestre do ano tem maior contribuição de usuários? 
Para respondermos essa pergunta, iremos analisar só o ano de 2016 pois se encontra completo nos nossos dados, diferente de 2017 que só tem contribuições até o mês de maio. Por se tratar novamente de uma amostra, teremos que aplicar novamente a técnica de bootstrapping. Também continuaremos a utilizar a mediana da quantidade de contribuições dos usuários para responder essa pergunta.


```{r}
median_trimestre_1 = git %>%
  filter(year(date) == "2016") %>%
  filter(quarter(date) == "1") %>%
  bootstrap(median(users),
            R = 2000) %>%
  CI.percentile(probs = c(.025, .975))

median_trimestre_2 = git %>%
  filter(year(date) == "2016") %>%
  filter(quarter(date) == "2") %>%
  bootstrap(median(users),
            R = 2000) %>%
  CI.percentile(probs = c(.025, .975))

median_trimestre_3 = git %>%
  filter(year(date) == "2016") %>%
  filter(quarter(date) == "3") %>%
  bootstrap(median(users),
            R = 2000) %>%
  CI.percentile(probs = c(.025, .975))

median_trimestre_4 = git %>%
  filter(year(date) == "2016") %>%
  filter(quarter(date) == "4") %>%
  bootstrap(median(users),
            R = 2000) %>%
  CI.percentile(probs = c(.025, .975))


data2 = data.frame(rbind(median_trimestre_1,
                         median_trimestre_2,
                         median_trimestre_3,
                         median_trimestre_4))

data2$trimestre = c("1", "2", "3", "4")

ggplot(data = data2,
       mapping = aes(x = trimestre, 
                     ymin = X2.5.,
                     ymax = X97.5.,
                     colour = trimestre)) +
  geom_errorbar(width = .2) +
  labs(title = "Inferência",
       x = "Trimestre",
       y = "Intervalo da mediana com 95% de confiança",
       colour = "Trimestre")

```

Logo, é possível observar que os primeiro e segundo trimestres possuem mais contribuições que os últimos dois, mas é interessante observar que não podemos dizer com exatidão qual o maior ou menor trimestre em termos de contribuições pois existem interseções entre os intervalos. 

Seguindo a mesma lógica da questão anteriormente respondida, vamos buscar responder agora a seguinte questão:


##Existe um semestre que tenha mais contribuições? 

```{r}
median_semestre_1 = git %>%
  filter(year(date) == "2016") %>%
  filter(semester(date) == "1") %>%
  bootstrap(median(users),
            R = 2000) %>%
  CI.percentile(probs = c(.025, .975))

median_semestre_2 = git %>%
  filter(year(date) == "2016") %>%
  filter(semester(date) == "2") %>%
  bootstrap(median(users),
            R = 2000) %>%
  CI.percentile(probs = c(.025, .975))

data4 = data.frame(rbind(median_semestre_1,
                         median_semestre_2))

data4$semestre = c("Primeiro Semestre", "Segundo Semestre")

ggplot(data = data4,
       mapping = aes(x = semestre, 
                     ymin = X2.5.,
                     ymax = X97.5.,
                     colour = semestre)) +
  geom_errorbar(width = .2) +
  labs(title = "Inferência",
       x = "Semestre",
       y = "Intervalo da mediana com 95% de confiança",
       colour = "Semestre")


```

Logo, podemos afimar, com 95% de confiança que o primeiro semestre do ano, possui mais contribuições dos usuários do GitHub, para as linguagens JavaScript e Python.